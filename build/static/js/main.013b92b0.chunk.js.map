{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/recipes.png","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","pages/Login.js","actions/index.js","components/SearchBar.jsx","components/Header.jsx","components/Footer.jsx","components/FoodCard.jsx","components/FoodButtons.jsx","pages/Foods.js","components/DrinkCard.jsx","components/DrinkButtons.jsx","pages/Drinks.js","pages/Perfil.js","pages/Explore.js","pages/ExploreFoods.js","pages/ExploreDrinks.js","actions/ingredientsActions.js","components/IngredientCard.jsx","pages/ExploreFoodsIngredients.js","pages/ExploreDrinksIngredients.js","pages/ExploreByArea.js","components/DoneRecipesButtons.jsx","components/DoneRecipeCard.jsx","pages/DoneRecipes.js","components/FavoriteRecipeButton.jsx","components/FavoriteRecipeCard.jsx","pages/FavoriteRecipes.js","components/RecomendedCard.jsx","components/RecipeDetailsFunc.js","components/RecipeDetails.jsx","pages/comidas.js","pages/bebidas.js","components/FavoriteButton.jsx","pages/RecipeInProgress.js","pages/NotFound.js","App.js","serviceWorker.js","reducers/drinkReducer.js","reducers/foodReducer.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","Login","state","email","senha","handleChange","bind","target","name","value","this","setState","history","props","verificaBotao","match","length","className","src","alt","htmlFor","type","placeholder","data-testid","onChange","disabled","onClick","localStorage","mealsToken","cocktailsToken","user","JSON","stringify","inProgressRecipes","cocktails","meals","push","React","Component","fetchIngrediente","ingredient","a","fetch","result","json","response","fetchName","fetchFirstLetter","primeiraLetra","fetchIngrentAction","searchInput","searchFilter","dispatch","payload","fetchIngredienteDrink","fetchNameDrink","fetchFirstLetterDrink","fetchDrinksAction","fetchFood","fetchFoodAction","fetchDrink","fetchDrinkAction","fetchCategorieFoodFilter","categorie","fetchFoodId","id","fetchCategorieDrinkFilter","fetchDrinkId","fetchRandomFood","fetchRandomDrink","SearchBar","buscaReceita","invokeAlert","requestFoodRecipes","title","requestDrinkRecipes","alert","fn","message","resultFood","resultDrink","to","idMeal","idDrink","event","action","connect","food","recipes","drink","Header","searchIcon","redirect","hydeInput","hydeSearch","changeRoute","showInput","Button","variant","profile","page-title","search","Footer","drinkImage","exploreImage","mealImage","filter","elem","index","map","recipe","key","strMealThumb","strMeal","width","FoodButtons","category","categories","isToggleOn","requisicao","handleClick","handleClickAll","strCategory","requestFoodFilter","requestFood","toggle","categorys","active","magic","idx","fetchCategorieFoodFilterAction","Foods","strDrinkThumb","strDrink","DrinkButtons","requestDrinkFilter","requestDrink","drinks","fetchCategorieDrinkFilterAction","Drinks","Perfil","mailUser","clearStorage","emailStorage","getItem","objEmail","parse","clear","Explore","ExploreFoods","randomFood","requestFoodRandom","foodRandom","ExploreDrinks","randomDrink","requestDrinkRandom","drinkRandom","fetchFoodIngredients","fetchDrinkIngredients","fetchFoodArea","fetchRecipesFoodArea","area","IngredientCard","getImages","dispatchAction","array","pathname","includes","strIngredient","strIngredient1","ingrediente","getByDrinkIngredient","getByFoodIngredient","ingredients","images","page","comidaBebida","ExploreFoodsIngredients","requestIngredients","location","ExploreDrinksIngredients","requestDrinkIngredients","ExploreByArea","renderizaArea","filtraArea","getArea","param","getRecipesArea","getFoodArea","e","strArea","DoneRecipesButtons","statusButton","DoneRecipesCard","copied","copyLink","copy","doneDate","tags","image","alcoholicOrNot","shareIcon","tag","indexTag","DoneRecipes","getDoneRecipes","innerText","foods","FavoriteRecipesButtons","FavoriteRecipesCard","removeFavoriteRecipe","black","FavoriteRecipes","getFavoriteRecipes","favorites","newFavorites","item","favoriteRecipes","setFavoriteRecipes","favorite","strAlcoholic","addFavorite","find","RecipeDetails","redirectInProgress","getIngredients","verifyFavorite","renderRecommendedCard","renderPage","stateSet","recipeDetails","chaves","Object","entries","ingredientes","apenasMedidas","medida","status","link","btnMessage","btnVisible","white","strInstructions","strYoutube","replace","renderButton","foodById","drinksById","drinkById","comidas","verifyRecipes","comidaId","params","requestFoodById","error","console","log","doneRecipes","getRecipes","keys","fetchFoodIdAction","bebidas","bebidaId","requestDrinkById","searchDone","fetchDrinkIdAction","FavoriteButton","RecipeInProgress","checked","finaliza","redireciona","changeState","salvaLocal","recuperaItens","URL","then","retorno","comida","findChecked","split","prev","remove","mealsLocal","drinksLocal","date","Date","actualDate","getDate","getMonth","getFullYear","strTags","done","addDone","setDoneRecipes","NotFound","App","exact","path","component","render","Boolean","window","hostname","INITIAL_STATE","drinkReducer","foodReducer","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.013b92b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/recipes.2fd40f14.png\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Login.css';\nimport src from '../images/recipes.png';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      senha: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { history } = this.props;\n    const { email, senha } = this.state;\n    const checkEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const min = 6;\n    const verificaBotao = email.match(checkEmail) && senha.length > min ? null : true;\n    const checkLogin = () => {\n      localStorage.mealsToken = 1;\n      localStorage.cocktailsToken = 1;\n      localStorage.user = JSON.stringify({\n        email,\n      });\n      localStorage.inProgressRecipes = JSON.stringify({ cocktails: {}, meals: {} });\n      history.push('/comidas');\n    };\n\n    return (\n      <div className=\"login-container\">\n        <div className=\"login\">\n          <img src={ src } alt=\"\" />\n\n          <label htmlFor=\"email\">\n            <input\n              type=\"email\"\n              className=\"title1\"\n              placeholder=\"E-mail\"\n              data-testid=\"email-input\"\n              name=\"email\"\n              onChange={ this.handleChange }\n            />\n          </label>\n          <label htmlFor=\"senha\">\n            <input\n              type=\"password\"\n              className=\"title\"\n              placeholder=\"Senha\"\n              data-testid=\"password-input\"\n              name=\"senha\"\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <button\n            type=\"button\"\n            data-testid=\"login-submit-btn\"\n            className=\"btnLogin\"\n            disabled={ verificaBotao }\n            onClick={ checkLogin }\n          >\n            {' '}\n            ENTRAR\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Login;\n","export const REQUEST_INGREDIENT_FOOD = 'REQUEST_INGREDIENT_FOOD';\nexport const REQUEST_INGREDIENT_DRINK = 'REQUEST_INGREDIENT_DRINK';\nexport const REQUEST_FOOD_BY_ID = 'REQUEST_FOOD_BY_ID';\nexport const REQUEST_DRINK_BY_ID = 'REQUEST_DRINK_BY_ID';\n\nexport const fetchIngrediente = async (ingredient) => {\n  const result = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredient}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchName = async (name) => {\n  const result = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchFirstLetter = async (primeiraLetra) => {\n  const result = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${primeiraLetra}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchIngrentAction = (searchInput, searchFilter) => async (dispatch) => {\n  let result = {};\n  if (searchFilter === 'ingrediente') {\n    result = await fetchIngrediente(searchInput);\n  } else if (searchFilter === 'nome') {\n    result = await fetchName(searchInput);\n  } else {\n    result = await fetchFirstLetter(searchInput);\n  }\n  dispatch({\n    type: REQUEST_INGREDIENT_FOOD,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchIngredienteDrink = async (ingredient) => {\n  const result = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredient}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchNameDrink = async (name) => {\n  const result = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchFirstLetterDrink = async (primeiraLetra) => {\n  const result = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${primeiraLetra}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchDrinksAction = (searchInput, searchFilter) => async (dispatch) => {\n  let result = {};\n  if (searchFilter === 'ingrediente') {\n    result = await fetchIngredienteDrink(searchInput);\n  } else if (searchFilter === 'nome') {\n    result = await fetchNameDrink(searchInput);\n  } else {\n    result = await fetchFirstLetterDrink(searchInput);\n  }\n  dispatch({\n    type: REQUEST_INGREDIENT_DRINK,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchFood = async () => {\n  const result = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchFoodAction = () => async (dispatch) => {\n  let result = {};\n  result = await fetchFood();\n  dispatch({\n    type: REQUEST_INGREDIENT_FOOD,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchDrink = async () => {\n  const result = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchDrinkAction = () => async (dispatch) => {\n  let result = {};\n  result = await fetchDrink();\n  dispatch({\n    type: REQUEST_INGREDIENT_DRINK,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchCategorieFoodFilter = async (categorie) => {\n  const result = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categorie}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchFoodId = async (id) => {\n  const result = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchCategorieFoodFilterAction = (categorie) => async (dispatch) => {\n  let result = {};\n  result = await fetchCategorieFoodFilter(categorie);\n  dispatch({\n    type: REQUEST_INGREDIENT_FOOD,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchFoodIdAction = (id) => async (dispatch) => {\n  const response = await fetchFoodId(id);\n  dispatch({\n    type: REQUEST_FOOD_BY_ID,\n    payload: {\n      response,\n    },\n  });\n};\n\nexport const fetchCategorieDrinkFilter = async (categorie) => {\n  const result = await\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${categorie}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchDrinkId = async (id) => {\n  const result = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchCategorieDrinkFilterAction = (categorie) => async (dispatch) => {\n  let result = {};\n  result = await fetchCategorieDrinkFilter(categorie);\n  dispatch({\n    type: REQUEST_INGREDIENT_DRINK,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchDrinkIdAction = (id) => async (dispatch) => {\n  const response = await fetchDrinkId(id);\n  dispatch({\n    type: REQUEST_DRINK_BY_ID,\n    payload: {\n      response,\n    },\n  });\n};\n\nexport const fetchRandomFood = async () => {\n  const result = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchFoodRandom = () => async (dispatch) => {\n  let result = {};\n  result = await fetchRandomFood();\n  dispatch({\n    type: REQUEST_INGREDIENT_FOOD,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchRandomDrink = async () => {\n  const result = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchDrinkRandom = () => async (dispatch) => {\n  let result = {};\n  result = await fetchRandomDrink();\n  dispatch({\n    type: REQUEST_INGREDIENT_DRINK,\n    payload: {\n      result,\n    },\n  });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../css/SearchBar.css';\nimport { fetchIngrentAction, fetchDrinksAction } from '../actions';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchInput: '',\n      searchFilter: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.buscaReceita = this.buscaReceita.bind(this);\n    this.invokeAlert = this.invokeAlert.bind(this);\n  }\n\n  handleChange({ target }) {\n    this.setState({ [target.name]: target.value });\n  }\n\n  buscaReceita() {\n    const { searchInput, searchFilter } = this.state;\n    const { requestFoodRecipes, title, requestDrinkRecipes } = this.props;\n    if (searchFilter === 'primeira-letra' && searchInput.length > 1) {\n      this.invokeAlert(alert, 'Sua busca deve conter somente 1 (um) caracter');\n    } else if (title === 'Comidas') requestFoodRecipes(searchInput, searchFilter);\n    else {\n      requestDrinkRecipes(searchInput, searchFilter);\n    }\n  }\n\n  // Source https://trybecourse.slack.com/archives/C01LCSLCZ8D/p1625054932179900\n  invokeAlert(fn, message) {\n    fn(message);\n  }\n\n  render() {\n    const { resultFood, resultDrink, title } = this.props;\n    if (resultFood && title === 'Comidas' && resultFood.length === 1) {\n      return <Redirect to={ `/comidas/${resultFood[0].idMeal}` } />;\n    }\n    if (resultDrink && title === 'Bebidas' && resultDrink.length === 1) {\n      return <Redirect to={ `/bebidas/${resultDrink[0].idDrink}` } />;\n    }\n    if (!resultFood || !resultDrink) {\n      this.invokeAlert(alert,\n        'Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n\n    return (\n      <div className=\"search\">\n        <div className=\"search-container\">\n          <input\n            className=\"search-input\"\n            data-testid=\"search-input\"\n            type=\"text\"\n            placeholder=\"Buscar Receita\"\n            name=\"searchInput\"\n            onChange={ (event) => this.handleChange(event) }\n          />\n\n          <form action=\"\">\n            <label htmlFor=\"radio-ingredient\">\n              <input\n                type=\"radio\"\n                id=\"radio-ingredient\"\n                value=\"ingrediente\"\n                name=\"searchFilter\"\n                data-testid=\"ingredient-search-radio\"\n                onChange={ (event) => this.handleChange(event) }\n              />\n              Ingrediente\n            </label>\n\n            <label htmlFor=\"radio-name\">\n              <input\n                type=\"radio\"\n                id=\"radio-name\"\n                value=\"nome\"\n                name=\"searchFilter\"\n                data-testid=\"name-search-radio\"\n                onChange={ (event) => this.handleChange(event) }\n              />\n              Nome\n            </label>\n\n            <label htmlFor=\"radio-first-letter\">\n              <input\n                type=\"radio\"\n                value=\"primeira-letra\"\n                name=\"searchFilter\"\n                id=\"radio-first-letter\"\n                data-testid=\"first-letter-search-radio\"\n                onChange={ (event) => this.handleChange(event) }\n              />\n              Primeira Letra\n            </label>\n          </form>\n\n          <button\n            data-testid=\"exec-search-btn\"\n            className=\"btt-search\"\n            type=\"button\"\n            onClick={ () => this.buscaReceita() }\n          >\n            Buscar\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resultFood: state.food.recipes,\n  resultDrink: state.drink.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestFoodRecipes: (searchInput, searchFilter) => (\n    dispatch(fetchIngrentAction(searchInput, searchFilter))),\n  requestDrinkRecipes: (searchInput, searchFilter) => (\n    dispatch(fetchDrinksAction(searchInput, searchFilter))\n  ),\n});\n\nSearchBar.propTypes = {\n  requestFoodRecipes: PropTypes.func.isRequired,\n  requestDrinkRecipes: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  resultFood: PropTypes.arrayOf(Object).isRequired,\n  resultDrink: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport profile from '../images/profileIcon.svg';\nimport search from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\nimport '../css/Header.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    const { searchIcon } = this.props;\n\n    this.state = {\n      redirect: false,\n      hydeInput: false,\n      hydeSearch: searchIcon,\n    };\n\n    this.changeRoute = this.changeRoute.bind(this);\n    this.showInput = this.showInput.bind(this);\n  }\n\n  showInput() {\n    const { hydeInput } = this.state;\n    this.setState(() => ({\n      hydeInput: !hydeInput }));\n  }\n\n  changeRoute() {\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { title } = this.props;\n    const { redirect, hydeInput, hydeSearch } = this.state;\n    if (redirect) return <Redirect to=\"/perfil\" />;\n    return (\n      <header>\n        <div>\n          <div className=\"header\">\n            <Button\n              variant=\"light\"\n              type=\"button\"\n              className=\"button-profile\"\n              data-testid=\"profile-top-btn\"\n              onClick={ this.changeRoute }\n              src={ profile }\n            >\n              <img src={ profile } alt=\"profile-icon\" />\n            </Button>\n            <h2\n              className=\"explore-ingredients\"\n              data-testid=\"page-title\"\n            >\n              {title}\n            </h2>\n            { !hydeSearch ? (\n              <Button\n                variant=\"light\"\n                onClick={ this.showInput }\n                type=\"button\"\n                className=\"button-search\"\n                page-title=\"search-top-btn\"\n                data-testid=\"search-top-btn\"\n                src={ search }\n              >\n                <img src={ search } alt=\"search-icon\" />\n              </Button>)\n              : (\n                <Button\n                  type=\"button\"\n                  className=\"button-search-invisible\"\n                >\n                  {' '}\n                </Button>)}\n          </div>\n\n          { !hydeInput\n            ? (\n              <input\n                type=\"hidden\"\n              />)\n            : (\n              <SearchBar title={ title } />\n            )}\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  searchIcon: PropTypes.bool.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkImage from '../images/drinkIcon.svg';\nimport exploreImage from '../images/exploreIcon.svg';\nimport mealImage from '../images/mealIcon.svg';\nimport '../css/Footer.css';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer data-testid=\"footer\" className=\"footer\">\n        <Link to=\"/bebidas\">\n          <img\n            data-testid=\"drinks-bottom-btn\"\n            src={ drinkImage }\n            alt=\"drinks\"\n          />\n        </Link>\n        <Link to=\"/explorar\">\n          <img\n            type=\"button\"\n            data-testid=\"explore-bottom-btn\"\n            src={ exploreImage }\n            alt=\"explore\"\n          />\n        </Link>\n        <Link to=\"/comidas\">\n          <img\n            type=\"button\"\n            data-testid=\"food-bottom-btn\"\n            src={ mealImage }\n            alt=\"food\"\n          />\n        </Link>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport '../css/Card.css';\n\nfunction FoodCard(props) {\n  const { resultFood } = props;\n  const totalRecipes = 12;\n  const food = resultFood.filter((elem, index) => index < totalRecipes);\n\n  return food.map((recipe, index) => (\n    <div key={ recipe.idMeal } className=\"card\">\n      <Link to={ `/comidas/${recipe.idMeal}` }>\n        <div data-testid={ `${index}-recipe-card` }>\n          <img\n            data-testid={ `${index}-card-img` }\n            src={ recipe.strMealThumb }\n            alt={ recipe.strMeal }\n            width=\"60px\"\n          />\n          <h4 data-testid={ `${index}-card-name` }>{ recipe.strMeal }</h4>\n        </div>\n      </Link>\n    </div>\n\n  ));\n}\n\nconst mapStateToProps = (state) => ({\n  resultFood: state.food.recipes,\n});\n\nexport default connect(mapStateToProps)(FoodCard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCategorieFoodFilterAction,\n  fetchFoodAction } from '../actions';\n\nimport '../css/Buttons.css';\n\nclass FoodButtons extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      category: '',\n      categories: [],\n      isToggleOn: false,\n    };\n\n    this.requisicao = this.requisicao.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickAll = this.handleClickAll.bind(this);\n  }\n\n  componentDidMount() {\n    this.requisicao();\n  }\n\n  handleClick({ strCategory }) {\n    const { categories, isToggleOn, category } = this.state;\n    const { requestFoodFilter, requestFood } = this.props;\n    if (!isToggleOn || strCategory !== category) {\n      requestFoodFilter(strCategory);\n      const toggle = categories.map((categorys) => {\n        if (categorys.strCategory === strCategory) return { ...categorys, active: false };\n        return { ...categorys, active: true };\n      });\n      this.setState({ categories: toggle, isToggleOn: true, category: strCategory });\n    } else {\n      requestFood();\n      this.setState({ isToggleOn: false });\n    }\n  }\n\n  handleClickAll() {\n    const { requestFood } = this.props;\n    const { categories } = this.state;\n    requestFood();\n    const toggle = categories.map((category) => ({ ...category, active: false }));\n    this.setState({ categories: toggle, isToggleOn: false });\n  }\n\n  async requisicao() {\n    const magic = 5;\n    const result = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n    const { meals } = await result.json();\n    const categories = meals\n      .filter(({ strCategory }, idx) => idx < magic && ({ active: false, strCategory }));\n    this.setState({ categories });\n  }\n\n  render() {\n    const { categories } = this.state;\n    return (\n      <div className=\"buttons-container\">\n        {categories.map(({ strCategory }, index) => (\n          <button\n            className=\"buttons-category\"\n            data-testid={ `${strCategory}-category-filter` }\n            type=\"button\"\n            key={ index }\n            name=\"categorie\"\n            value={ strCategory }\n            onClick={ () => this.handleClick({ strCategory }) }\n          >\n            {strCategory}\n          </button>\n        ))}\n        <button\n          className=\"buttons-category\"\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ () => this.handleClickAll() }\n        >\n          All\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.food.categories,\n  resultFood: state.food.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestFoodFilter: (categorie) => (\n    dispatch(fetchCategorieFoodFilterAction(categorie))),\n  requestFood: () => (\n    dispatch(fetchFoodAction())),\n});\n\nFoodButtons.propTypes = {\n  requestFoodFilter: PropTypes.func.isRequired,\n  requestFood: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodButtons);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport FoodCard from '../components/FoodCard';\nimport { fetchFoodAction } from '../actions';\nimport FoodButtons from '../components/FoodButtons';\n\nclass Foods extends Component {\n  constructor() {\n    super();\n\n    this.requisicao = this.requisicao.bind(this);\n  }\n\n  componentDidMount() {\n    const { resultFood } = this.props;\n    if (resultFood.length === 0) this.requisicao();\n  }\n\n  requisicao() {\n    const { requestFoodRecipes } = this.props;\n    requestFoodRecipes();\n  }\n\n  render() {\n    const { resultFood } = this.props;\n    return (\n      <div className=\"page\">\n        <Header title=\"Comidas\" />\n        <FoodButtons />\n        <div className=\"cards-container\">\n          {resultFood ? <FoodCard /> : null}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resultFood: state.food.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestFoodRecipes: () => (dispatch(fetchFoodAction())),\n});\n\nFoods.propTypes = {\n  requestFoodRecipes: PropTypes.func.isRequired,\n  resultFood: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Foods);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nfunction DrinkCard(props) {\n  const { resultDrink } = props;\n\n  const totalRecipes = 12;\n  const drinks = resultDrink.filter((elem, index) => index < totalRecipes);\n\n  return drinks.map((recipe, index) => (\n    <div key={ recipe.idMeal } className=\"card\">\n      <Link to={ `/bebidas/${recipe.idDrink}` }>\n        <div key={ recipe.idDrink } data-testid={ `${index}-recipe-card` }>\n          <img\n            data-testid={ `${index}-card-img` }\n            src={ recipe.strDrinkThumb }\n            alt={ recipe.strDrink }\n            width=\"60px\"\n          />\n          <h4 data-testid={ `${index}-card-name` }>{ recipe.strDrink }</h4>\n        </div>\n      </Link>\n    </div>\n  ));\n}\n\nconst mapStateToProps = (state) => ({\n  resultDrink: state.drink.recipes,\n});\n\nexport default connect(mapStateToProps)(DrinkCard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCategorieDrinkFilterAction,\n  fetchDrinkAction } from '../actions';\n\nimport '../css/Buttons.css';\n\nclass DrinkButtons extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      category: '',\n      categories: [],\n      isToggleOn: false,\n    };\n\n    this.requisicao = this.requisicao.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickAll = this.handleClickAll.bind(this);\n  }\n\n  componentDidMount() {\n    this.requisicao();\n  }\n\n  handleClick({ strCategory }) {\n    const { categories, isToggleOn, category } = this.state;\n    const { requestDrinkFilter, requestDrink } = this.props;\n    if (!isToggleOn || strCategory !== category) {\n      requestDrinkFilter(strCategory);\n      const toggle = categories.map((categorys) => {\n        if (categorys.strCategory === strCategory) return { ...categorys, active: false };\n        return { ...categorys, active: true };\n      });\n      this.setState({ categories: toggle, isToggleOn: true, category: strCategory });\n    } else {\n      requestDrink();\n      this.setState({ isToggleOn: false });\n    }\n  }\n\n  handleClickAll() {\n    const { requestDrink } = this.props;\n    const { categories } = this.state;\n    requestDrink();\n    const toggle = categories.map((category) => ({ ...category, active: false }));\n    this.setState({ categories: toggle, isToggleOn: false });\n  }\n\n  async requisicao() {\n    const magic = 5;\n    const result = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n    const { drinks } = await result.json();\n    const categories = drinks\n      .filter(({ strCategory }, idx) => idx < magic && ({ active: false, strCategory }));\n    this.setState({ categories });\n  }\n\n  render() {\n    const { categories } = this.state;\n    return (\n      <div className=\"buttons-container\">\n        {categories.map(({ strCategory }, index) => (\n          <button\n            className=\"buttons-category\"\n            data-testid={ `${strCategory}-category-filter` }\n            type=\"button\"\n            key={ index }\n            name=\"categorie\"\n            value={ strCategory }\n            onClick={ () => this.handleClick({ strCategory }) }\n          >\n            {strCategory}\n          </button>\n        ))}\n        <button\n          className=\"buttons-category\"\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ () => this.handleClickAll() }\n        >\n          All\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.drink.categories,\n  resultDrink: state.food.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestDrinkFilter: (categorie) => (\n    dispatch(fetchCategorieDrinkFilterAction(categorie))),\n  requestDrink: () => (\n    dispatch(fetchDrinkAction())),\n});\n\nDrinkButtons.propTypes = {\n  requestDrinkFilter: PropTypes.func.isRequired,\n  requestDrink: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkButtons);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport DrinkCard from '../components/DrinkCard';\nimport { fetchDrinkAction } from '../actions';\nimport DrinkButtons from '../components/DrinkButtons';\n\nclass Drinks extends Component {\n  constructor() {\n    super();\n\n    this.requisicao = this.requisicao.bind(this);\n  }\n\n  componentDidMount() {\n    const { resultDrink } = this.props;\n    if (resultDrink.length === 0) this.requisicao();\n  }\n\n  requisicao() {\n    const { requestDrinkRecipes } = this.props;\n    requestDrinkRecipes();\n  }\n\n  render() {\n    const { resultDrink } = this.props;\n    return (\n      <div className=\"page\">\n        <Header title=\"Bebidas\" />\n        <DrinkButtons />\n        <div className=\"cards-container\">\n          {resultDrink ? <DrinkCard /> : null}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resultDrink: state.drink.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestDrinkRecipes: () => (dispatch(fetchDrinkAction())),\n});\n\nDrinks.propTypes = {\n  requestDrinkRecipes: PropTypes.func.isRequired,\n  resultDrink: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Drinks);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../css/Page.css';\nimport '../css/Buttons.css';\n\nclass Perfil extends Component {\n  constructor() {\n    super();\n    this.mailUser = this.mailUser.bind(this);\n    this.clearStorage = this.clearStorage.bind(this);\n  }\n\n  mailUser() {\n    // codigo para localStorage conseguido https://josiaspereira.com.br/como-usar-localstorage-no-reactjs/\n    const emailStorage = localStorage.getItem('user');\n    const objEmail = JSON.parse(emailStorage);\n    if (objEmail) {\n      const { email } = objEmail;\n      if (email !== null) {\n        return email;\n      }\n      return null;\n    }\n  }\n\n  clearStorage() {\n    localStorage.clear();\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"perfil-container\">\n          <section>\n            <Header title=\"Perfil\" searchIcon />\n          </section>\n\n          <div className=\"buttons-recipes-container\">\n            <p data-testid=\"profile-email\" className=\"email-user\">\n              {this.mailUser()}\n            </p>\n\n            <Link\n              to=\"/receitas-feitas\"\n              type=\"button\"\n              data-testid=\"profile-done-btn\"\n            >\n              <button type=\"button\" className=\"button-recipes-done\">\n                Receitas Feitas\n              </button>\n            </Link>\n\n            <Link\n              to=\"/receitas-favoritas\"\n              type=\"button\"\n              data-testid=\"profile-favorite-btn\"\n            >\n              <button type=\"button\" className=\"button-recipes-done\">\n                Receitas Favoritas\n              </button>\n            </Link>\n\n            <Link\n              to=\"/\"\n              type=\"button\"\n              data-testid=\"profile-logout-btn\"\n              onClick={ this.clearStorage }\n            >\n              <button type=\"button\" className=\"button-recipes-done\">\n                Sair\n              </button>\n            </Link>\n          </div>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Perfil;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nimport '../css/Page.css';\nimport '../css/Buttons.css';\n\nclass Explore extends Component {\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"perfil-container\">\n          <section>\n            <Header title=\"Explorar\" searchIcon />\n          </section>\n\n          <section className=\"buttons-explore-container\">\n            <Link to=\"/explorar/comidas\">\n              <button\n                className=\"buttons-explore\"\n                type=\"button\"\n                data-testid=\"explore-food\"\n              >\n                Explorar Comidas\n              </button>\n            </Link>\n\n            <Link to=\"/explorar/bebidas\">\n              <button\n                className=\"buttons-explore\"\n                type=\"button\"\n                data-testid=\"explore-drinks\"\n              >\n                Explorar Bebidas\n              </button>\n            </Link>\n          </section>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Explore;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchFoodRandom } from '../actions/index';\n\nimport '../css/Buttons.css';\n\nclass ExploreFoods extends Component {\n  constructor() {\n    super();\n\n    this.randomFood = this.randomFood.bind(this);\n  }\n\n  componentDidMount() {\n    this.randomFood();\n  }\n\n  randomFood() {\n    const { requestFoodRandom } = this.props;\n    requestFoodRandom();\n  }\n\n  render() {\n    const { foodRandom } = this.props;\n    return (\n      foodRandom[0]\n        ? (\n          <div className=\"page\">\n            <div className=\"perfil-container\">\n              <section>\n                <Header title=\"Explorar Comidas\" searchIcon />\n                <Link to=\"/explorar/comidas/ingredientes\">\n                  <button\n                    className=\"buttons-explore\"\n                    type=\"button\"\n                    data-testid=\"explore-by-ingredient\"\n                  >\n                    Por Ingredientes\n                  </button>\n                </Link>\n\n                <Link to=\"/explorar/comidas/area\">\n                  <button\n                    className=\"buttons-explore\"\n                    type=\"button\"\n                    data-testid=\"explore-by-area\"\n                  >\n                    Por Local de Origem\n                  </button>\n                </Link>\n                <Link to={ `/comidas/${foodRandom[0].idMeal}` }>\n                  <button\n                    className=\"buttons-explore\"\n                    type=\"button\"\n                    data-testid=\"explore-surprise\"\n                  >\n                    Me Surpreenda!\n                  </button>\n                </Link>\n              </section>\n              <Footer />\n            </div>\n          </div>\n        )\n        : null\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodRandom: state.food.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestFoodRandom: () => dispatch(fetchFoodRandom()),\n});\n\nExploreFoods.propTypes = {\n  requestFoodRandom: PropTypes.func.isRequired,\n  foodRandom: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoods);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchDrinkRandom } from '../actions/index';\n\nimport '../css/Buttons.css';\n\nclass ExploreDrinks extends Component {\n  constructor() {\n    super();\n\n    this.randomDrink = this.randomDrink.bind(this);\n  }\n\n  componentDidMount() {\n    this.randomDrink();\n  }\n\n  randomDrink() {\n    const { requestDrinkRandom } = this.props;\n    requestDrinkRandom();\n  }\n\n  render() {\n    const { drinkRandom } = this.props;\n    return (\n      drinkRandom[0]\n        ? (\n          <div className=\"page\">\n            <div className=\"perfil-container\">\n              <Header title=\"Explorar Bebidas\" searchIcon />\n              <div className=\"explore-buttons\">\n                <Link to=\"/explorar/bebidas/ingredientes\">\n                  <button\n                    className=\"buttons-explore\"\n                    type=\"button\"\n                    data-testid=\"explore-by-ingredient\"\n                  >\n                    Por Ingredientes\n                  </button>\n                </Link>\n                <Link to={ `/bebidas/${drinkRandom[0].idDrink}` }>\n                  <button\n                    className=\"buttons-explore\"\n                    type=\"button\"\n                    data-testid=\"explore-surprise\"\n                  >\n                    Me Surpreenda!\n                  </button>\n                </Link>\n              </div>\n\n              <Footer />\n            </div>\n          </div>\n        )\n        : null\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinkRandom: state.drink.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestDrinkRandom: () => dispatch(fetchDrinkRandom()),\n});\n\nExploreDrinks.propTypes = {\n  requestDrinkRandom: PropTypes.func.isRequired,\n  drinkRandom: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreDrinks);\n","export const REQUEST_FOOD_INGREDIENTS = 'REQUEST_FOOD_INGREDIENTS';\nexport const REQUEST_DRINK_INGREDIENTS = 'REQUEST_DRINK_INGREDIENTS';\nexport const REQUEST_FOOD_AREA = 'REQUEST_FOOD_AREA';\nexport const REQUEST_INGREDIENT_FOOD = 'REQUEST_INGREDIENT_FOOD';\n\nexport const fetchFoodIngredients = async () => {\n  const result = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchFoodIngredientsAction = () => async (dispatch) => {\n  let result = {};\n  result = await fetchFoodIngredients();\n  dispatch({\n    type: REQUEST_FOOD_INGREDIENTS,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchDrinkIngredients = async () => {\n  const result = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchDrinkIngredientsAction = () => async (dispatch) => {\n  let result = {};\n  result = await fetchDrinkIngredients();\n  dispatch({\n    type: REQUEST_DRINK_INGREDIENTS,\n    payload: {\n      result,\n    },\n  });\n};\n\nexport const fetchFoodArea = async () => {\n  const result = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchAreaAction = () => async (dispatch) => {\n  let result = {};\n  result = await fetchFoodArea();\n  const meals = [{ strArea: 'All' }, ...result.meals];\n  dispatch({\n    type: REQUEST_FOOD_AREA,\n    payload: {\n      meals,\n    },\n  });\n};\n\nexport const fetchRecipesFoodArea = async (area) => {\n  const result = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`);\n  const response = await result.json();\n  return response;\n};\n\nexport const fetchRecipesFoodAreaAction = (area) => async (dispatch) => {\n  let result = {};\n  result = await fetchRecipesFoodArea(area);\n  dispatch({\n    type: REQUEST_INGREDIENT_FOOD,\n    payload: {\n      result,\n    },\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { fetchDrinksAction, fetchIngrentAction } from '../actions';\n\nimport '../css/IngredientCard.css';\n\nclass IngredientCard extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      redirect: false,\n    };\n\n    this.getImages = this.getImages.bind(this);\n    this.dispatchAction = this.dispatchAction.bind(this);\n  }\n\n  getImages(array) {\n    const { pathname } = this.props;\n    const db = pathname.includes('comidas');\n    if (db) {\n      return array.map(({ strIngredient }) => (\n        `www.themealdb.com/images/ingredients/${strIngredient}-Small.png`));\n    }\n    return array.map(({ strIngredient1 }) => (\n      `www.thecocktaildb.com/images/ingredients/${strIngredient1}-Small.png`));\n  }\n\n  async dispatchAction(ingrediente) {\n    const { pathname, getByDrinkIngredient, getByFoodIngredient } = this.props;\n    const db = pathname.includes('comidas');\n\n    if (db) {\n      await getByFoodIngredient(ingrediente, 'ingrediente');\n      this.setState({ redirect: true });\n      return;\n    }\n    await getByDrinkIngredient(ingrediente, 'ingrediente');\n    this.setState({ redirect: true });\n    return null;\n  }\n\n  render() {\n    const { ingredients, pathname } = this.props;\n    const { redirect } = this.state;\n    const totalRecipes = 12;\n    const food = ingredients.filter((elem, index) => index < totalRecipes);\n    const images = this.getImages(food);\n    const page = pathname.includes('comidas') ? '/comidas' : '/bebidas';\n\n    if (redirect) return <Redirect to={ page } />;\n\n    return food.map((recipe, index) => {\n      const comidaBebida = pathname.includes('comidas')\n        ? recipe.strIngredient : recipe.strIngredient1;\n      return (\n        <button\n          className=\"card-container\"\n          key={ recipe.strIngredient1 || recipe.strIngredient }\n          type=\"button\"\n          onClick={ () => (\n            this.dispatchAction(comidaBebida)) }\n        >\n          <div data-testid={ `${index}-ingredient-card` } className=\"ingredient-card\">\n            <img\n              className=\"ingredient-img\"\n              data-testid={ `${index}-card-img` }\n              src={ `https://${images[index]}` }\n              alt={ recipe.strIngredient || recipe.strIngredient1 }\n              width=\"60px\"\n            />\n            <h4 data-testid={ `${index}-card-name` }>\n              { recipe.strIngredient || recipe.strIngredient1 }\n            </h4>\n          </div>\n        </button>\n      );\n    });\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getByDrinkIngredient: (ingrediente, ingredient) => (\n    dispatch(fetchDrinksAction(ingrediente, ingredient))),\n  getByFoodIngredient: (ingrediente, ingredient) => (\n    dispatch(fetchIngrentAction(ingrediente, ingredient))),\n});\n\nconst mapStateToProps = (state) => ({\n  resultFood: state.food.recipes,\n});\n\nIngredientCard.propTypes = {\n  ingredients: PropTypes.arrayOf(PropTypes.object),\n  pathname: PropTypes.string,\n  getByIngredient: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientCard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchFoodIngredientsAction } from '../actions/ingredientsActions';\nimport IngredientCard from '../components/IngredientCard';\n\nclass ExploreFoodsIngredients extends Component {\n  componentDidMount() {\n    const { requestIngredients } = this.props;\n    requestIngredients();\n  }\n\n  render() {\n    const { ingredients, location: { pathname } } = this.props;\n    return (\n      ingredients ? (\n        <div className=\"page\">\n          <div className=\"perfil-container\">\n            <section className=\"ingredients-container\">\n              <Header title=\"Explorar Ingredientes\" searchIcon />\n              <IngredientCard ingredients={ ingredients } pathname={ pathname } />\n            </section>\n            <Footer />\n          </div>\n        </div>)\n        : null\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestIngredients: () => dispatch(fetchFoodIngredientsAction()),\n});\n\nconst mapStateToProps = (state) => ({\n  ingredients: state.food.ingredients,\n});\n\nExploreFoodsIngredients.propTypes = {\n  requestIngredients: PropTypes.func,\n  ingredients: PropTypes.arrayOf(Object),\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreFoodsIngredients);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchDrinkIngredientsAction } from '../actions/ingredientsActions';\nimport IngredientCard from '../components/IngredientCard';\n\nclass ExploreDrinksIngredients extends Component {\n  componentDidMount() {\n    const { requestDrinkIngredients } = this.props;\n    requestDrinkIngredients();\n  }\n\n  render() {\n    const { ingredients, location: { pathname } } = this.props;\n    return (\n      ingredients ? (\n        <div className=\"page\">\n          <div className=\"perfil-container\">\n            <section className=\"ingredients-container\">\n              <Header title=\"Explorar Ingredientes\" searchIcon />\n              <IngredientCard ingredients={ ingredients } pathname={ pathname } />\n            </section>\n            <Footer />\n          </div>\n        </div>)\n        : null\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestDrinkIngredients: () => dispatch(fetchDrinkIngredientsAction()),\n});\n\nconst mapStateToProps = (state) => ({\n  ingredients: state.drink.ingredients,\n});\n\nExploreDrinksIngredients.propTypes = {\n  requestDrinkIngredients: PropTypes.func,\n  ingredients: PropTypes.arrayOf(Object),\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreDrinksIngredients);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchFoodAction } from '../actions';\nimport { fetchAreaAction,\n  fetchRecipesFoodAreaAction } from '../actions/ingredientsActions';\nimport FoodCard from '../components/FoodCard';\nimport '../css/Page.css';\nimport '../css/Card.css';\n\nclass ExploreByArea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      area: '',\n    };\n\n    this.renderizaArea = this.renderizaArea.bind(this);\n    this.filtraArea = this.filtraArea.bind(this);\n    this.requisicao = this.requisicao.bind(this);\n  }\n\n  componentDidMount() {\n    const { getArea } = this.props;\n    getArea();\n    const { resultFood } = this.props;\n    if (resultFood.length === 0) this.requisicao();\n  }\n\n  requisicao() {\n    const { requestFoodRecipes } = this.props;\n    requestFoodRecipes();\n  }\n\n  filtraArea(param) {\n    const { getRecipesArea } = this.props;\n    if (param === 'All') {\n      this.setState({ area: param });\n      this.requisicao();\n    } else {\n      this.setState({ area: param });\n      getRecipesArea(param);\n    }\n  }\n\n  renderizaArea() {\n    const { getFoodArea } = this.props;\n    const { area } = this.state;\n    return (\n      <div className=\"select-div\">\n        <select\n          data-testid=\"explore-by-area-dropdown\"\n          id=\"area\"\n          value={ area }\n          onChange={ (e) => this.filtraArea(e.target.value) }\n        >\n          { getFoodArea.map((result, index) => (\n            <option\n              key={ index }\n              value={ result.strArea }\n              data-testid={ `${result.strArea}-option` }\n            >\n              { result.strArea }\n            </option>\n          ))}\n        </select>\n      </div>);\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <Header title=\"Explorar Origem\" />\n        {this.renderizaArea()}\n        <div className=\"cards-container\">\n          <FoodCard />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  getFoodArea: state.food.area,\n  resultFood: state.food.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getArea: () => dispatch(fetchAreaAction()),\n  getRecipesArea: (state) => dispatch(fetchRecipesFoodAreaAction(state)),\n  requestFoodRecipes: () => (dispatch(fetchFoodAction())),\n});\n\nExploreByArea.propTypes = {\n  getArea: PropTypes.func.isRequired,\n  getRecipesArea: PropTypes.func.isRequired,\n  getFoodArea: PropTypes.arrayOf(Object).isRequired,\n  requestFoodRecipes: PropTypes.func.isRequired,\n  resultFood: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreByArea);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Buttons.css';\n\nclass DoneRecipesButtons extends Component {\n  render() {\n    const { statusButton } = this.props;\n    return (\n      <div className=\"buttons-container\">\n        <button\n          type=\"button\"\n          className=\"buttons-category\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ (e) => statusButton(e) }\n        >\n          All\n        </button>\n        <button\n          className=\"buttons-category\"\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ (e) => statusButton(e) }\n        >\n          Food\n        </button>\n        <button\n          className=\"buttons-category\"\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ (e) => statusButton(e) }\n        >\n          Drink\n        </button>\n      </div>\n    );\n  }\n}\n\nDoneRecipesButtons.propTypes = {\n  statusButton: PropTypes.string,\n}.isRequired;\n\nexport default DoneRecipesButtons;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes, { string } from 'prop-types';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\n\nimport '../css/DoneRecipeCard.css';\nimport '../css/Buttons.css';\n\nclass DoneRecipesCard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      copied: false,\n    };\n\n    this.copyLink = this.copyLink.bind(this);\n  }\n\n  copyLink() {\n    this.setState({ copied: true });\n\n    const { recipe } = this.props;\n    const { type, id } = recipe;\n    copy(`http://localhost:3000/${type}s/${id}`);\n  }\n\n  render() {\n    const { recipe, index } = this.props;\n    const {\n      name, area, category, doneDate, tags, image, alcoholicOrNot, type, id } = recipe;\n    const { copied } = this.state;\n    return (\n      <section className=\"done-card-container\">\n\n        <div className=\"done-card-container-img\">\n          <Link to={ `/${type}s/${id}` }>\n            <img\n              src={ image }\n              alt={ name }\n              data-testid={ `${index}-horizontal-image` }\n              width=\"100px\"\n            />\n          </Link>\n        </div>\n\n        <div className=\"done-card-container-text\">\n\n          <h6 data-testid={ `${index}-horizontal-top-text` }>\n            {`${area} - ${category}`}\n          </h6>\n          <h6 data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</h6>\n\n          <Link to={ `/${type}s/${id}` }>\n            <h2 data-testid={ `${index}-horizontal-name` }>{name}</h2>\n          </Link>\n\n          <p data-testid={ `${index}-horizontal-done-date` }>{doneDate}</p>\n          <div className=\"button-copy-container\">\n            <button\n              className=\"like-and-share-page2\"\n              type=\"button\"\n              onClick={ this.copyLink }\n            >\n              {copied ? 'Link copiado!'\n                : (\n                  <img\n                    src={ shareIcon }\n                    alt=\"shareIcon\"\n                    data-testid={ `${index}-horizontal-share-btn` }\n                  />)}\n            </button>\n            {tags ? tags.map((tag, indexTag) => (\n              <span\n                key={ indexTag }\n                data-testid={ `${index}-${tag}-horizontal-tag` }\n              >\n                { tag }\n              </span>)) : null}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nDoneRecipesCard.propTypes = {\n  recipe: PropTypes.shape({\n    name: PropTypes.string,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    doneDate: PropTypes.string,\n    tags: PropTypes.arrayOf(string),\n    image: PropTypes.string,\n    alcoholicOrNot: PropTypes.string,\n  }),\n  index: PropTypes.string,\n}.isRequired;\n\nexport default DoneRecipesCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport DoneRecipesButtons from '../components/DoneRecipesButtons';\nimport DoneRecipesCard from '../components/DoneRecipeCard';\n\nimport '../css/Page.css';\nimport '../css/Buttons.css';\n\nclass DoneRecipes extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      recipes: [],\n    };\n\n    this.getDoneRecipes = this.getDoneRecipes.bind(this);\n    this.statusButton = this.statusButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDoneRecipes();\n  }\n\n  getDoneRecipes() {\n    const recipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (recipes) {\n      this.setState({ recipes });\n      return recipes;\n    }\n  }\n\n  statusButton({ target }) {\n    if (target.innerText === 'Food') {\n      const foods = this.getDoneRecipes() ? (\n        this.getDoneRecipes().filter((recipe) => recipe.type === 'comida')) : null;\n      this.setState({ recipes: foods });\n    } else if (target.innerText === 'Drink') {\n      const drinks = this.getDoneRecipes() ? (\n        this.getDoneRecipes().filter((recipe) => recipe.type === 'bebida')) : null;\n      this.setState({ recipes: drinks });\n    } else {\n      this.getDoneRecipes();\n    }\n  }\n\n  render() {\n    const { recipes } = this.state;\n    return (\n      <div className=\"page\">\n        <div className=\"recipes-done-container\">\n          <Header title=\"Receitas Feitas\" searchIcon />\n          <DoneRecipesButtons statusButton={ this.statusButton } />\n          {recipes ? recipes.map((recipe, index) => (\n            <DoneRecipesCard\n              key={ index }\n              recipe={ recipe }\n              index={ index }\n            />)) : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nDoneRecipes.propTypes = {\n  location: PropTypes.objectOf(Object),\n}.isRequired;\n\nexport default DoneRecipes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../css/Buttons.css';\n\nclass FavoriteRecipesButtons extends Component {\n  render() {\n    const { statusButton } = this.props;\n    return (\n      <div className=\"buttons-container\">\n        <button\n          className=\"buttons-category\"\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ (e) => statusButton(e) }\n        >\n          All\n        </button>\n        <button\n          className=\"buttons-category\"\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ (e) => statusButton(e) }\n        >\n          Food\n        </button>\n        <button\n          className=\"buttons-category\"\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ (e) => statusButton(e) }\n        >\n          Drink\n        </button>\n      </div>\n    );\n  }\n}\n\nFavoriteRecipesButtons.propTypes = {\n  statusButton: PropTypes.string,\n}.isRequired;\n\nexport default FavoriteRecipesButtons;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport black from '../images/blackHeartIcon.svg';\n\nimport '../css/FavoriteRecipeCard.css';\nimport '../css/Buttons.css';\n\nclass FavoriteRecipesCard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      copied: false,\n    };\n\n    this.copyLink = this.copyLink.bind(this);\n  }\n\n  copyLink() {\n    this.setState({ copied: true });\n\n    const { recipe } = this.props;\n    const { type, id } = recipe;\n    copy(`http://localhost:3000/${type}s/${id}`);\n  }\n\n  render() {\n    const { recipe, index, removeFavoriteRecipe } = this.props;\n    const { name, area, category, image, alcoholicOrNot, type, id } = recipe;\n    const { copied } = this.state;\n    return (\n      <section className=\"favorite-card-container\">\n        <Link to={ `/${type}s/${id}` }>\n          <div className=\"card-container-img\">\n            <img\n              src={ image }\n              alt={ name }\n              data-testid={ `${index}-horizontal-image` }\n              width=\"130px\"\n            />\n          </div>\n        </Link>\n        <div className=\"card-container-text\">\n          <h6 data-testid={ `${index}-horizontal-top-text` }>\n            {`${area} - ${category}`}\n          </h6>\n          <h6 data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</h6>\n          <Link to={ `/${type}s/${id}` }>\n            <h2 data-testid={ `${index}-horizontal-name` }>{name}</h2>\n          </Link>\n          <div className=\"card-container-buttons\">\n            <button\n              type=\"button\"\n              onClick={ this.copyLink }\n              className=\"like-and-share-page\"\n            >\n              {copied ? 'Link copiado!'\n                : (\n                  <img\n                    src={ shareIcon }\n                    alt=\"shareIcon\"\n                    data-testid={ `${index}-horizontal-share-btn` }\n                  />)}\n            </button>\n            <button\n              className=\"like-and-share-page\"\n              type=\"button\"\n              onClick={ () => removeFavoriteRecipe(index) }\n            >\n              <img\n                data-testid={ `${index}-horizontal-favorite-btn` }\n                src={ black }\n                alt=\"favoriteIcon\"\n              />\n            </button>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nFavoriteRecipesCard.propTypes = {\n  recipe: PropTypes.shape({\n    name: PropTypes.string,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    image: PropTypes.string,\n    alcoholicOrNot: PropTypes.string,\n  }),\n  index: PropTypes.string,\n}.isRequired;\n\nexport default FavoriteRecipesCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport FavoriteRecipesButtons from '../components/FavoriteRecipeButton';\nimport FavoriteRecipesCard from '../components/FavoriteRecipeCard';\n\nclass FavoriteRecipes extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      recipes: [],\n    };\n\n    this.getFavoriteRecipes = this.getFavoriteRecipes.bind(this);\n    this.statusButton = this.statusButton.bind(this);\n    this.removeFavoriteRecipe = this.removeFavoriteRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFavoriteRecipes();\n  }\n\n  getFavoriteRecipes() {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (recipes) {\n      this.setState({ recipes });\n      return recipes;\n    }\n  }\n\n  statusButton({ target }) {\n    if (target.innerText === 'Food') {\n      const foods = this.getFavoriteRecipes() ? (\n        this.getFavoriteRecipes().filter((recipe) => recipe.type === 'comida')) : null;\n      this.setState({ recipes: foods });\n    } else if (target.innerText === 'Drink') {\n      const drinks = this.getFavoriteRecipes() ? (\n        this.getFavoriteRecipes().filter((recipe) => recipe.type === 'bebida')) : null;\n      this.setState({ recipes: drinks });\n    } else {\n      this.getFavoriteRecipes();\n    }\n  }\n\n  removeFavoriteRecipe(id) {\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorites) {\n      const newFavorites = favorites.filter((item, index) => index !== id);\n      localStorage.favoriteRecipes = JSON.stringify(newFavorites);\n      this.setState({ recipes: newFavorites });\n    }\n  }\n\n  render() {\n    const { recipes } = this.state;\n    const { location: { pathname } } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"recipes-done-container\">\n          <Header title=\"Receitas Favoritas\" searchIcon />\n          <FavoriteRecipesButtons statusButton={ this.statusButton } />\n          {recipes ? recipes.map((recipe, index) => (\n            <FavoriteRecipesCard\n              key={ index }\n              recipe={ recipe }\n              index={ index }\n              pathname={ pathname }\n              removeFavoriteRecipe={ this.removeFavoriteRecipe }\n            />)) : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nFavoriteRecipes.propTypes = {\n  location: PropTypes.objectOf(Object),\n}.isRequired;\n\nexport default FavoriteRecipes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport '../css/RecomendedCard.css';\n\nfunction RecomendedCard(props) {\n  const { recipes } = props;\n  const totalCards = 6;\n  const cards = recipes.filter((elem, index) => index < totalCards);\n\n  return cards.map((recipe, index) => (\n    <div\n      key={ index }\n      data-testid={ `${index}-recomendation-card` }\n      className=\"recomendation-card\"\n    >\n      <div>\n        <img\n          src={ recipe.strMealThumb || recipe.strDrinkThumb }\n          alt={ recipe.strMeal || recipe.strDrink }\n          width=\"100px\"\n        />\n      </div>\n      <div\n        data-testid={ `${index}-recomendation-title` }\n        className=\"recomendation-title\"\n      >\n        {recipe.strMeal || recipe.strDrink}\n      </div>\n    </div>\n  ));\n}\n\nconst mapStateToProps = (state) => ({\n  resultDrink: state.drink.recipes,\n});\n\nexport default connect(mapStateToProps)(RecomendedCard);\n","export function setFavoriteRecipes(recipe, title) {\n  const favorite = {\n    id: recipe.idDrink || recipe.idMeal,\n    type: title === 'Comidas' ? 'comida' : 'bebida',\n    area: recipe.strArea || '',\n    category: recipe.strCategory || '',\n    alcoholicOrNot: recipe.strAlcoholic || '',\n    name: recipe.strMeal || recipe.strDrink,\n    image: recipe.strMealThumb || recipe.strDrinkThumb,\n  };\n\n  if (localStorage.favoriteRecipes) {\n    const recipes = JSON.parse(localStorage.favoriteRecipes);\n    const addFavorite = [...recipes, favorite];\n    localStorage.favoriteRecipes = JSON.stringify(addFavorite);\n    return addFavorite;\n  }\n  localStorage.favoriteRecipes = JSON.stringify([favorite]);\n}\n\nexport function getFavoriteRecipes(id) {\n  if (localStorage.favoriteRecipes) {\n    const favorites = JSON.parse(localStorage.favoriteRecipes);\n    const isFavorite = favorites.find((item) => item.id === id);\n    if (isFavorite) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function removeFavoriteRecipe(id) {\n  if (localStorage.favoriteRecipes) {\n    const favorites = JSON.parse(localStorage.favoriteRecipes);\n    const newFavorites = favorites.filter((item) => item.id !== id);\n    localStorage.favoriteRecipes = JSON.stringify(newFavorites);\n    return newFavorites;\n  }\n}\n\nexport function setDoneRecipes(recipe, pathname) {\n  const verifyPath = pathname.includes('comida');\n  let title = 'Bebidas';\n  if (verifyPath) {\n    title = 'Comidas';\n  }\n  // Source https://codare.aurelio.net/2009/04/03/javascript-obter-e-mostrar-data-e-hora/\n  const date = new Date();\n  const actualDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n\n  const tag = [];\n  if (recipe.strTags !== null) {\n    tag.push(recipe.strTags);\n  }\n\n  const done = {\n    id: recipe.idDrink || recipe.idMeal,\n    type: title === 'Comidas' ? 'comida' : 'bebida',\n    area: recipe.strArea || '',\n    category: recipe.strCategory || '',\n    alcoholicOrNot: recipe.strAlcoholic || '',\n    name: recipe.strMeal || recipe.strDrink,\n    image: recipe.strMealThumb || recipe.strDrinkThumb,\n    doneDate: actualDate,\n    tags: tag || [],\n  };\n\n  if (localStorage.doneRecipes) {\n    const recipes = JSON.parse(localStorage.doneRecipes);\n    const addDone = [...recipes, done];\n    localStorage.doneRecipes = JSON.stringify(addDone);\n    return addDone;\n  }\n  localStorage.doneRecipes = JSON.stringify([done]);\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport white from '../images/whiteHeartIcon.svg';\nimport black from '../images/blackHeartIcon.svg';\nimport RecomendedCard from './RecomendedCard';\nimport {\n  setFavoriteRecipes,\n  getFavoriteRecipes,\n  removeFavoriteRecipe } from './RecipeDetailsFunc';\n\nimport '../css/Buttons.css';\n\nclass RecipeDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirectInProgress: false,\n      copied: false,\n      favorite: false,\n    };\n\n    this.getIngredients = this.getIngredients.bind(this);\n    this.copyLink = this.copyLink.bind(this);\n    this.verifyFavorite = this.verifyFavorite.bind(this);\n    this.renderRecommendedCard = this.renderRecommendedCard.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n    this.stateSet = this.stateSet.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    this.stateSet(getFavoriteRecipes(id));\n  }\n\n  getIngredients() {\n    const { recipeDetails } = this.props;\n    if (recipeDetails[0]) {\n      const chaves = Object.entries(recipeDetails[0]);\n      const ingredientes = chaves.filter((key) => (\n        key[0].includes('strIngredient') && (key[1] !== null && key[1] !== '')));\n      const medidas = chaves.filter((key) => (\n        key[0].includes('strMeasure') && (key[1] !== null && key[1] !== ' ')));\n      const apenasMedidas = medidas.map((medida) => medida[1]);\n      return ingredientes.map((ingrediente, index) => {\n        if (ingrediente && apenasMedidas[index]) {\n          return (\n            <li\n              key={ index }\n              className=\"\"\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {`${ingrediente[1]} - ${apenasMedidas[index]}`}\n            </li>);\n        }\n        return null;\n      });\n    }\n  }\n\n  stateSet(status) {\n    this.setState({ favorite: status });\n  }\n\n  copyLink() {\n    this.setState({ copied: true });\n\n    const { link } = this.props;\n    copy(`http://localhost:3000${link}`);\n  }\n\n  verifyFavorite(recipe) {\n    const { id, title } = this.props;\n    const isFav = getFavoriteRecipes(id);\n\n    if (isFav) {\n      this.setState({ favorite: false });\n      return removeFavoriteRecipe(id);\n    }\n    setFavoriteRecipes(recipe, title);\n    this.setState({ favorite: true });\n  }\n\n  renderButton(btnMessage) {\n    return (\n      <div>\n        <button\n          className=\"button-start-recipe\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          onClick={ () => this.setState({ redirectInProgress: true }) }\n        >\n          { btnMessage }\n        </button>\n      </div>\n    );\n  }\n\n  renderRecommendedCard(recipes) {\n    return (\n      <div className=\"recipe-details-recommended\">\n        <h4>Recomendadas</h4>\n        <div className=\"card-list\">\n          <RecomendedCard recipes={ recipes } />\n        </div>\n      </div>\n    );\n  }\n\n  renderPage(recipeDetails) {\n    const { title, recipes, btnVisible, btnMessage } = this.props;\n    const { copied, favorite } = this.state;\n    return (\n\n      <div className=\"recipe-details\">\n        <img\n          className=\"recipe-img\"\n          data-testid=\"recipe-photo\"\n          src={ recipeDetails[0].strMealThumb || recipeDetails[0].strDrinkThumb }\n          alt={ recipeDetails[0].strMeal || recipeDetails[0].strDrink }\n          width=\"250px\"\n        />\n\n        <div className=\"recipe-details-titles\">\n          <h2 data-testid=\"recipe-title\">\n            { recipeDetails[0].strMeal || recipeDetails[0].strDrink }\n          </h2>\n          <div className=\"recipe-details-links\">\n            <button\n              className=\"like-and-share\"\n              data-testid=\"share-btn\"\n              type=\"button\"\n              onClick={ this.copyLink }\n            >\n              <img src={ shareIcon } alt=\"shareIcon\" />\n            </button>\n\n            <button\n              className=\"like-and-share\"\n              type=\"button\"\n              onClick={ () => this.verifyFavorite(recipeDetails[0]) }\n            >\n              <img\n                data-testid=\"favorite-btn\"\n                src={ favorite ? black : white }\n                alt=\"favoriteIcon\"\n              />\n            </button>\n            {copied ? <span>Link copiado!</span> : null}\n\n          </div>\n        </div>\n        <div className=\"recipe-details-subtitles\">\n          <span data-testid=\"recipe-category\">\n            { recipeDetails[0].strAlcoholic }\n          </span>\n        </div>\n        <div className=\"recipe-details-subtitles\">\n          <span data-testid=\"recipe-category\">{ recipeDetails[0].strCategory }</span>\n        </div>\n        <div className=\"recipe-details-ingredients\">\n          <h4>Ingredientes</h4>\n          <ul>\n            {this.getIngredients()}\n          </ul>\n        </div>\n        <div className=\"recipe-details-instructions\">\n          <h4>Instruções</h4>\n          <p data-testid=\"instructions\">{ recipeDetails[0].strInstructions }</p>\n        </div>\n        {title === 'Bebidas' ? null\n          : (\n            <div className=\"recipe-details-video\">\n              <h4>Vídeo</h4>\n              <iframe\n                data-testid=\"video\"\n                title={ recipeDetails[0].strMeal || recipeDetails[0].strDrink }\n                // Source https://developers.google.com/youtube/player_parameters?hl=pt-br\n                src={ recipeDetails[0].strYoutube.replace('watch?v=', 'embed/') }\n              />\n            </div>)}\n        {this.renderRecommendedCard(recipes)}\n        {btnVisible ? this.renderButton(btnMessage) : null }\n      </div>\n    );\n  }\n\n  render() {\n    const { recipeDetails } = this.props;\n    const { redirectInProgress } = this.state;\n\n    if (redirectInProgress) {\n      const { foodById, drinksById } = this.props;\n\n      if (foodById.length !== 0 && drinksById.length === 0) {\n        return <Redirect to={ `/comidas/${foodById[0].idMeal}/in-progress` } />;\n      }\n      return <Redirect to={ `/bebidas/${drinksById[0].idDrink}/in-progress` } />;\n    }\n\n    return (\n      recipeDetails[0] ? this.renderPage(recipeDetails)\n        : null\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  foodById: state.food.foodById,\n  drinksById: state.drink.drinkById,\n});\n\nRecipeDetails.propTypes = {\n  recipeDetails: PropTypes.arrayOf(Object),\n  id: PropTypes.string,\n}.isRequired;\n\nexport default connect(mapStateToProps)(RecipeDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RecipeDetails from '../components/RecipeDetails';\nimport { fetchFoodIdAction, fetchDrinkAction } from '../actions';\nimport '../css/Page.css';\n\nclass comidas extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      btnVisible: true,\n      btnMessage: 'Iniciar Receita',\n    };\n    this.verifyRecipes = this.verifyRecipes.bind(this);\n  }\n\n  componentDidMount() {\n    const { match: { params: { comidaId } },\n      requestFoodById, requestDrinkRecipes } = this.props;\n    const foodId = comidaId.replace(/[^0-9]/g, '');\n    requestFoodById(foodId);\n    requestDrinkRecipes();\n    try {\n      this.verifyRecipes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  verifyRecipes() {\n    const { match: { params: { comidaId: id } } } = this.props;\n    if (localStorage.doneRecipes) {\n      const searchDone = JSON.parse(localStorage.doneRecipes);\n      if (searchDone.find((item) => item.id === id)) {\n        this.setState({ btnVisible: false });\n      }\n    }\n    if (localStorage.inProgressRecipes) {\n      const getRecipes = JSON.parse(localStorage.inProgressRecipes);\n      const inProgres = Object.keys(getRecipes)\n        .map((key) => Object.keys(getRecipes[key]).includes(id));\n      if (inProgres.includes(true)) {\n        this.setState({ btnMessage: 'Continuar Receita' });\n      }\n    }\n  }\n\n  render() {\n    const { btnMessage, btnVisible } = this.state;\n    const { location: { pathname } } = this.props;\n    const { recipeDetails, recipes, match: { params: { comidaId } } } = this.props;\n\n    return (\n      recipeDetails && recipes ? (\n        <div className=\"page\">\n          <div className=\"recipe-container\">\n            <RecipeDetails\n              recipeDetails={ recipeDetails }\n              title=\"Comidas\"\n              recipes={ recipes }\n              link={ pathname }\n              id={ comidaId }\n              btnVisible={ btnVisible }\n              btnMessage={ btnMessage }\n            />\n          </div>\n        </div>\n      )\n        : null\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  recipeDetails: state.food.foodById,\n  recipes: state.drink.recipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestFoodById: (id) => dispatch(fetchFoodIdAction(id)),\n  requestDrinkRecipes: () => (dispatch(fetchDrinkAction())),\n});\n\ncomidas.propTypes = {\n  match: PropTypes.object,\n  params: PropTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(comidas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RecipeDetails from '../components/RecipeDetails';\nimport { fetchDrinkIdAction, fetchFoodAction } from '../actions';\nimport '../css/Page.css';\n\nclass bebidas extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      btnVisible: true,\n      btnMessage: 'Iniciar Receita',\n    };\n    this.verifyRecipes = this.verifyRecipes.bind(this);\n  }\n\n  componentDidMount() {\n    const { match: { params: { bebidaId } },\n      requestDrinkById, requestFoodRecipes } = this.props;\n    requestDrinkById(bebidaId);\n    requestFoodRecipes();\n    try {\n      this.verifyRecipes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  verifyRecipes() {\n    const { match: { params: { bebidaId: id } } } = this.props;\n    if (localStorage.doneRecipes) {\n      const searchDone = JSON.parse(localStorage.doneRecipes);\n      searchDone.find((item) => item.id === id);\n      if (searchDone.find((item) => item.id === id)) {\n        this.setState({ btnVisible: false });\n      }\n    }\n    if (localStorage.inProgressRecipes) {\n      const getRecipes = JSON.parse(localStorage.inProgressRecipes);\n      const inProgres = Object.keys(getRecipes)\n        .map((key) => Object.keys(getRecipes[key]).includes(id));\n      if (inProgres.includes(true)) {\n        this.setState({ btnMessage: 'Continuar Receita' });\n      }\n    }\n  }\n\n  render() {\n    const { btnMessage, btnVisible } = this.state;\n    const { location: { pathname } } = this.props;\n    const { recipeDetails, recipes, match: { params: { bebidaId } } } = this.props;\n    return (\n      recipeDetails && recipes ? (\n        <div className=\"page\">\n          <div className=\"recipe-container\">\n            <RecipeDetails\n              recipeDetails={ recipeDetails }\n              title=\"Bebidas\"\n              recipes={ recipes }\n              link={ pathname }\n              id={ bebidaId }\n              btnVisible={ btnVisible }\n              btnMessage={ btnMessage }\n            />\n          </div>\n        </div>\n      )\n        : null\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestDrinkById: (id) => dispatch(fetchDrinkIdAction(id)),\n  requestFoodRecipes: () => (dispatch(fetchFoodAction())),\n});\n\nconst mapStateToProps = (state) => ({\n  recipeDetails: state.drink.drinkById,\n  recipes: state.food.recipes,\n});\n\nbebidas.propTypes = {\n  match: PropTypes.object,\n  params: PropTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(bebidas);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport white from '../images/whiteHeartIcon.svg';\nimport black from '../images/blackHeartIcon.svg';\nimport {\n  setFavoriteRecipes,\n  getFavoriteRecipes,\n  removeFavoriteRecipe } from './RecipeDetailsFunc';\n\nclass FavoriteButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      favorite: false,\n    };\n\n    this.verifyFavorite = this.verifyFavorite.bind(this);\n    this.stateSet = this.stateSet.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    this.stateSet(getFavoriteRecipes(id));\n  }\n\n  stateSet(status) {\n    this.setState({ favorite: status });\n  }\n\n  verifyFavorite(recipe) {\n    const { id, pathname } = this.props;\n    const verifyPath = pathname.includes('comida');\n    let title = 'Bebidas';\n    if (verifyPath) {\n      title = 'Comidas';\n    }\n\n    const isFav = getFavoriteRecipes(id);\n\n    if (isFav) {\n      this.setState({ favorite: false });\n      return removeFavoriteRecipe(id);\n    }\n    setFavoriteRecipes(recipe, title);\n    this.setState({ favorite: true });\n  }\n\n  render() {\n    const { favorite } = this.state;\n    const { recipeDetails } = this.props;\n    return (\n      <button\n        className=\"like-and-share\"\n        type=\"button\"\n        onClick={ () => this.verifyFavorite(recipeDetails) }\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ favorite ? black : white }\n          alt=\"favoriteIcon\"\n        />\n      </button>\n    );\n  }\n}\n\nFavoriteButton.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n}.isRequired;\n\nexport default FavoriteButton;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport FavoriteButton from '../components/FavoriteButton';\nimport { setDoneRecipes } from '../components/RecipeDetailsFunc';\n\nimport '../css/RecipeDetails.css'; import '../css/Page.css'; import '../css/Buttons.css';\n\nclass RecipeInProgress extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipeDetails: {},\n      checked: [],\n      copied: false,\n      finaliza: false,\n      redireciona: false,\n    };\n    this.getIngredients = this.getIngredients.bind(this);\n    this.changeState = this.changeState.bind(this);\n    this.copyLink = this.copyLink.bind(this);\n    this.redireciona = this.redireciona.bind(this);\n    this.salvaLocal = this.salvaLocal.bind(this);\n    this.recuperaItens = this.recuperaItens.bind(this);\n  }\n\n  componentDidMount() {\n    const { meals } = this.props;\n    const { match: { params: { comidaId } } } = this.props;\n    const { match: { params: { bebidaId } } } = this.props;\n    const db = meals ? 'themealdb' : 'thecocktaildb';\n    const id = meals ? comidaId : bebidaId;\n    const URL = `https://www.${db}.com/api/json/v1/1/lookup.php?i=${id}`;\n    fetch(URL)\n      .then((response) => response.json())\n      .then((retorno) => {\n        const { meals: comida, drinks } = retorno;\n        const recipeDetails = comida || drinks;\n        this.setState({ recipeDetails });\n      });\n    this.recuperaItens();\n  }\n\n  getIngredients() {\n    const { recipeDetails, checked } = this.state;\n    if (recipeDetails[0]) {\n      const chaves = Object.entries(recipeDetails[0]);\n      const ingredientes = chaves.filter((key) => (\n        key[0].includes('strIngredient') && (key[1] !== null && key[1] !== '')));\n      const medidas = chaves.filter((key) => (\n        key[0].includes('strMeasure') && (key[1] !== null && key[1] !== ' ')));\n      const apenasMedidas = medidas.map((medida) => medida[1]);\n      return ingredientes.map((ingrediente, index) => {\n        if (ingrediente && apenasMedidas[index]) {\n          const findChecked = checked.find(\n            (e) => e === index || 0,\n          ) === index || 0 ? true : null;\n          return (\n            <li\n              key={ index }\n              data-testid={ `${index}-ingredient-step` }\n            >\n              <label\n                htmlFor=\"key\"\n                className={ findChecked && 'checked' }\n              >\n                <input\n                  type=\"checkbox\"\n                  id=\"key\"\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                  checked={ findChecked }\n                  onClick={ () => this.changeState(index) }\n                />\n                {`${ingrediente[1]}-${apenasMedidas[index]}`}\n              </label>\n            </li>);\n        }\n        return null;\n      });\n    }\n  }\n\n  recuperaItens() {\n    const { meals } = this.props;\n    const { match: { params: { comidaId } } } = this.props;\n    const { match: { params: { bebidaId } } } = this.props;\n    const id = meals ? comidaId : bebidaId;\n    const recipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (recipes && (recipes.meals[id] || recipes.cocktails[id])) {\n      if (meals && recipes.meals[id]) {\n        this.setState({\n          checked: recipes.meals[id],\n        });\n      } else if (!meals && recipes.cocktails[id]) {\n        this.setState({\n          checked: recipes.cocktails[id],\n        });\n      }\n    }\n  }\n\n  copyLink() {\n    this.setState({ copied: true });\n    const { location: { pathname } } = this.props;\n    const link = pathname.split('/in-progress');\n    copy(`http://localhost:3000${link[0]}`);\n  }\n\n  changeState(param) {\n    localStorage.inProgressRecipes = JSON.stringify({ cocktails: {}, meals: {} });\n    const { checked, recipeDetails } = this.state;\n    const verificaChecked = checked.find(\n      (e) => e === param || 0,\n    ) === param || 0 ? true : null;\n    if (verificaChecked) {\n      this.setState({\n        checked: checked.filter((e) => e !== param || 0),\n      });\n      this.salvaLocal(checked.filter((e) => e !== param || 0));\n    } else {\n      this.setState((prev) => ({\n        checked: [...prev.checked, param],\n      }));\n      this.salvaLocal(param);\n    }\n    const chaves = Object.entries(recipeDetails[0]);\n    const ingredientes = chaves.filter((key) => (\n      key[0].includes('strIngredient') && (key[1] !== null && key[1] !== '')));\n    if (ingredientes.length === checked.length + 1) {\n      this.setState({\n        finaliza: true,\n      });\n    }\n  }\n\n  salvaLocal(param) {\n    const { checked } = this.state;\n    const { meals } = this.props;\n    const { match: { params: { comidaId } } } = this.props;\n    const { match: { params: { bebidaId } } } = this.props;\n    const id = meals ? comidaId : bebidaId;\n    const remove = typeof param === 'object';\n    if (meals) {\n      const mealsLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (mealsLocal) {\n        localStorage.inProgressRecipes = JSON.stringify({\n          ...mealsLocal,\n          meals: {\n            ...mealsLocal.meals,\n            [id]: remove ? param : [...checked, param],\n          },\n        });\n      }\n    } else {\n      const drinksLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (drinksLocal) {\n        localStorage.inProgressRecipes = JSON.stringify({\n          ...drinksLocal,\n          cocktails: {\n            ...drinksLocal.cocktails,\n            [id]: remove ? param : [...checked, param],\n          },\n        });\n      }\n    }\n  }\n\n  redireciona(recipe, pathname) {\n    this.setState({ redireciona: true });\n    setDoneRecipes(recipe, pathname);\n  }\n\n  render() {\n    const { recipeDetails, copied, finaliza, redireciona } = this.state;\n    const { meals } = this.props;\n    const { match: { params: { comidaId } } } = this.props;\n    const { match: { params: { bebidaId } } } = this.props;\n    const { location: { pathname } } = this.props;\n    const id = meals ? comidaId : bebidaId;\n    if (redireciona) return <Redirect to=\"/receitas-feitas\" />;\n    return (\n      recipeDetails[0] ? (\n        <div className=\"page\">\n          <div className=\"perfil-container\">\n            <div className=\"recipe-container\">\n              <img\n                className=\"recipe-img\"\n                data-testid=\"recipe-photo\"\n                src={ recipeDetails[0].strMealThumb || recipeDetails[0].strDrinkThumb }\n                alt={ recipeDetails[0].strMeal || recipeDetails[0].strDrink }\n                width=\"250px\"\n              />\n              <h1 data-testid=\"recipe-title\">\n                { recipeDetails[0].strMeal || recipeDetails[0].strDrink }\n              </h1>\n              <span data-testid=\"recipe-category\">\n                { recipeDetails[0].strAlcoholic }\n              </span>\n              <button\n                className=\"like-and-share\"\n                data-testid=\"share-btn\"\n                type=\"button\"\n                onClick={ this.copyLink }\n              >\n                {copied ? 'Link copiado!'\n                  : <img src={ shareIcon } alt=\"shareIcon\" />}\n              </button>\n              <FavoriteButton\n                className=\"like-and-share\"\n                recipeDetails={ recipeDetails[0] }\n                id={ id }\n                pathname={ pathname }\n              />\n              {copied ? <span>Link copiado!</span> : null}\n\n              <span data-testid=\"recipe-category\">\n                { recipeDetails[0].strCategory }\n              </span>\n              <div className=\"recipe-details-ingredients\">\n                <h4>Ingredientes</h4>\n                <ul>{this.getIngredients()}</ul>\n              </div>\n              <h4>Instruções</h4>\n              <p data-testid=\"instructions\">{ recipeDetails[0].strInstructions }</p>\n              <button\n                type=\"button\"\n                className=\"button-end-recipe\"\n                data-testid=\"finish-recipe-btn\"\n                disabled={ !finaliza }\n                onClick={ () => this.redireciona(recipeDetails[0], pathname) }\n              >\n                Finalizar Receita\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null\n    );\n  }\n}\n\nRecipeInProgress.propTypes = {\n  recipeDetails: PropTypes.arrayOf(Object),\n  id: PropTypes.string,\n}.isRequired;\n\nexport default RecipeInProgress;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <h1>Not Found</h1>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Foods from './pages/Foods';\nimport Drinks from './pages/Drinks';\nimport Perfil from './pages/Perfil';\nimport Explore from './pages/Explore';\nimport ExploreFoods from './pages/ExploreFoods';\nimport ExploreDrinks from './pages/ExploreDrinks';\nimport ExploreFoodsIngredients from './pages/ExploreFoodsIngredients';\nimport ExploreDrinksIngredients from './pages/ExploreDrinksIngredients';\nimport ExploreByArea from './pages/ExploreByArea';\nimport DoneRecipes from './pages/DoneRecipes';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport comidas from './pages/comidas';\nimport bebidas from './pages/bebidas';\nimport RecipeInProgress from './pages/RecipeInProgress';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/comidas\" component={ Foods } />\n      <Route exact path=\"/bebidas\" component={ Drinks } />\n      <Route exact path=\"/comidas/:comidaId\" component={ comidas } />\n      <Route exact path=\"/bebidas/:bebidaId\" component={ bebidas } />\n      <Route\n        exact\n        path=\"/comidas/:comidaId/in-progress\"\n        render={ (props) => <RecipeInProgress { ...props } meals /> }\n      />\n      <Route exact path=\"/bebidas/:bebidaId/in-progress\" component={ RecipeInProgress } />\n      <Route exact path=\"/explorar\" component={ Explore } />\n      <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\n      <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n      <Route\n        exact\n        path=\"/explorar/comidas/ingredientes\"\n        component={ ExploreFoodsIngredients }\n      />\n      <Route\n        exact\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ ExploreDrinksIngredients }\n      />\n      <Route exact path=\"/explorar/comidas/area\" component={ ExploreByArea } />\n      <Route exact path=\"/explorar/bebidas/area\" component={ NotFound } />\n      <Route exact path=\"/perfil\" component={ Perfil } />\n      <Route exact path=\"/receitas-feitas\" component={ DoneRecipes } />\n      <Route exact path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { REQUEST_INGREDIENT_DRINK, REQUEST_DRINK_BY_ID } from '../actions';\nimport { REQUEST_DRINK_INGREDIENTS } from '../actions/ingredientsActions';\n\nconst INITIAL_STATE = {\n  recipes: [],\n  categories: [],\n  drinkById: [],\n  ingredients: [],\n};\n\nconst drinkReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_INGREDIENT_DRINK:\n    return {\n      ...state,\n      recipes: action.payload.result.drinks,\n    };\n  case REQUEST_DRINK_BY_ID:\n    return {\n      ...state,\n      drinkById: action.payload.response.drinks,\n    };\n  case REQUEST_DRINK_INGREDIENTS:\n    return {\n      ...state,\n      ingredients: action.payload.result.drinks,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default drinkReducer;\n","import { REQUEST_INGREDIENT_FOOD, REQUEST_FOOD_BY_ID } from '../actions';\nimport { REQUEST_FOOD_INGREDIENTS,\n  REQUEST_FOOD_AREA } from '../actions/ingredientsActions';\n\nconst INITIAL_STATE = {\n  recipes: [],\n  categories: [],\n  area: [],\n  foodById: [],\n  ingredients: [],\n};\n\nconst foodReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_INGREDIENT_FOOD:\n    return {\n      ...state,\n      recipes: action.payload.result.meals,\n    };\n  case REQUEST_FOOD_BY_ID:\n    return {\n      ...state,\n      foodById: action.payload.response.meals,\n    };\n  case REQUEST_FOOD_INGREDIENTS:\n    return {\n      ...state,\n      ingredients: action.payload.result.meals,\n    };\n  case REQUEST_FOOD_AREA:\n    return {\n      ...state,\n      area: action.payload.meals,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default foodReducer;\n","import { combineReducers } from 'redux';\nimport drinkReducer from './drinkReducer';\nimport foodReducer from './foodReducer';\n\nconst rootReducers = combineReducers({\n  food: foodReducer,\n  drink: drinkReducer,\n});\n\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducers from '../reducers';\n\nconst store = createStore(\n  rootReducers,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}